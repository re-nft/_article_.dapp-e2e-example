name: Continuous Integration

env:
  FOUNDRY_CACHE_PATH: ${{ github.workspace }}/.foundry/cache
  PLAYWRIGHT_BROWSERS_PATH: ${{ github.workspace }}/ms-playwright

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  pipeline:
    runs-on: ubuntu-latest
    steps:
      # Install deps
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: npm
          node-version: 18
      - uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
      - run: npm ci

      # Playwright caching
      # For Playwright it's wise to cache the browsers on the
      # OS used + the installed Playwright version.
      # We need to find the version ourselves though...
      # https://playwright.dev/docs/ci#caching-browsers
      - run: |
          echo "PLAYWRIGHT_VERSION=$(node -e "process.stdout.write(require('@playwright/test/package.json').version)")" >> $GITHUB_OUTPUT
        id: playwright-version
      - uses: actions/cache@v3
        id: playwright-cache
        with:
          key: ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.PLAYWRIGHT_VERSION }}
          path: ${{ env.PLAYWRIGHT_BROWSERS_PATH }}
      - run: npm run e2e install
        if: steps.playwright-cache.outputs.cache-hit != 'true'

      # Foundry's `anvil` caches things as well. Notably: testnet forks!
      - uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-foundry
          path: ${{ env.FOUNDRY_CACHE_PATH }}

      # Run CI
      - run: npm run lint
      - run: npm run e2e test
      - run: npm run build
